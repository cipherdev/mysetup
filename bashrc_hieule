#<enter description here># ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '
#     PS1='\[\e[0;33m\]®®»»» \u@\h\[\e[m\]:\[\e[0;37m\]\w\[\e[m\]\n\[\e[0;32m\]««««©©»»»» \[\e[0m\]'
#     PS1="\`if [ \$? = 0 ]; then echo \[\e[33m\]^_^\[\e[0m\]; else echo \[\e[31m\]O_O\[\e[0m\]; fi\`[\u@\h:\w]\\$ "		
     PS1="\`if [ \$? = 0 ]; then echo \[\e[33m\]^_^\[\e[0m\]; else echo \[\e[31m\]T_T\[\e[0m\]; fi\`\[\e[0;36m\] «®» \u@\h\[\e[m\]:\[\e[0;37m\]\w\[\e[m\]\n\[\e[0;32m\]««©©©©»» \[\e[0m\]"
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'
    alias kel=' cd /AMCC/hnle/p4/refPlatforms/keelback_rd/'
    alias stor=' cd /AMCC/hnle/bmc_project/'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias vi='vim'
alias tmux='tmux -2'
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

ELDK=/.automount/tools/eldk/4.2
#P4=/.automount/tools/perforce/p4/v2009.2
#P4=/tools/perforce/p4/v2009.2
#P4=/AMCC/toanle/p4v-2014.1.815009/
P4=/.automount/tools/perforce/p4/v2012.1
CSDK_VER=2010.09-110
CSDK=/.automount/tools/codesourcery/sourceryg/powerpc/lite/$CSDK_VER

#Ask development environment
read -p "Do you want to use ARM development platform(Y/N)?" ENTRY
# For build image with CodeSourcery
if [ "$ENTRY" = "Y" ]; then
export ARCH=arm
export CROSS_COMPILE=aarch64-apm-linux-gnu-
export ARM_MSLIM_TOOLCHAIN_PATH=/tools/codesourcery/sourceryg/arm/lite/2011.09
export ARM_SLIMPRO_TOOLCHAIN_PATH=/tools/arm/rvds/RVCT/Programs/4.0/591/linux-pentium
export AARCH64_TOOLCHAIN_PATH=/tools/arm/armv8/Theobroma/opt/apm-aarch64/6.0.4
export AARCH64_TOOLCHAIN_PREFIX=aarch64-apm-linux-gnu
export APM_TOOLCHAIN_PATH=/tools/arm/armv8/Theobroma/opt/apm-aarch64/8.0.5-le
export APM_TOOLCHAIN_PREFIX=aarch64-apm-linux-gnu
PATH=$PATH:${ARM_64_TOOLCHAIN_PATH}/bin
PATH=$PATH:${ARM_MSLIM_TOOLCHAIN_PATH}/bin
PATH=$PATH:${ARM_SLIMPRO_TOOLCHAIN_PATH}/bin
PATH=$PATH:${AARCH64_TOOLCHAIN_PATH}/bin
PATH=$PATH:${APM_TOOLCHAIN_PATH}/bin
PATH=$P4/bin:$PATH
else
export PATH=$PATH:$CSDK/bin:$ELDK/sbin:$ELDK/usr/bin:$ELDK/bin:$P4/bin
export ARCH=powerpc
#export CROSS_COMPILE=ppc_4xx-
export CROSS_COMPILE=powerpc-apm-linux-gnu-
export CS_TOOLCHAIN_PATH=$CSDK
export CS_TOOLCHAIN_PREFIX=powerpc-apm-linux-gnu
export CS_TOOLCHAIN_PPC_PATH=/.automount/tools/codesourcery/sourceryg/powerpc/native
fi

#export P4PORT="localhost:1666"
#export P4PORT="hcmlic03:1666"
#export P4PORT="ipcswsvdcp4:1666"
#export P4PORT=10.66.16.95:1666
export P4CONFIG=.p4settings
export P4DIFF=diff
#export P4PORT=hcmp4proxy01:1666
export P4PORT=HCMP4PROXY01.amcc.com:1666
export P4MERGE=p4merge
export P4USER=hnle
export IPSERVER=`/bin/hostname -I | /bin/cut -d ' ' -f1`
if [ "$IPSERVER" = "10.38.12.20" ]; then
export P4CLIENT=hnle_sw4
fi
export P4PASSWD=amcc1234
export P4EDITOR=vim
export BUILDROOT_DL_DIR=/opensource/packages
export WS=$WORKSPACE
alias sw2="export P4CLIENT=hnle_sw2; \
        export WORKSPACE=/AMCC/hnle/p4; \
    cd /AMCC/hnle/p4/refPlatforms/"
alias ippws=" cd /AMCC/hnle/p4_lynx/ipp"
alias ippwsq4=" cd /AMCC/hnle/p4/processor/storm_soc_q4_12/ipp/"
alias stormdev=" cd /AMCC/hnle/p4/processor/storm_dev/"
alias stormboard=" cd /AMCC/hnle/p4/refPlatforms/storm_boards//"
alias p4e=" p4 edit"
alias p4s=" p4 sync"
alias p4fs=" p4 sync -f"
alias traceipp=" cscope -b -q -k -R -s ../apm"
alias tracelinux=" cscope -b -q -k -R -s "
alias lynx108=" cd /AMCC/hnle/p4/processor/hnle_storm_lynx_1.08/"
alias duf='du -sk * | sort -nr | perl -ne '\''($s,$f)=split(m{\t});for (qw(K M G)) {if($s<1024) {printf("%.1f",$s);print "$_\t$f"; last};$s=$s/1024}'\'''
alias cscoppe='/AMCC/hnle/tools/bin'
# quick link
export mybin=/AMCC/hnle/tools/my_bin/
export PATH="${PATH}:${mybin}"
